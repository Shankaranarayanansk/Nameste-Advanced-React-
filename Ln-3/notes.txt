simply we use the npx parcel index.html in previous in this we  edit the package.json and add the scripts :
{
    "start" : "parcel index.html"
}

for production 

scripts
{
    "build" : parcel build index.html
}

Laying the Foundations

React element is not html element it is a object when we render then only become a html element

 -const head = React.createElement()"h1",{id : "head"},"Content")
  
  console.log(head)

 -const root = ReactDOM.createRoot(document.getElementById("root"))

 root.render(head)

 when it render on index.html it will replace the exist content

 but above code is not much good thats way meta developer found the jsx

 jsx is separate and react is separate and the jsx makes the react easy to code 

 h1 tag using jsx 

const s1 = <h1 id="head">Vanakam la </h1>

the above is not html that is jsx like ejs  and jsx like html based syntax more closer to xml 

ReactElement and jsx works like same both are object

as a developer we write code for machine or human 

1st human then machine thats way the jsx is used 

jsx is also not a pure js because the js uses the ECMA scripts for converting to js it done by the parcel only by it self it use the bable 

babel will convert jsx to ReactElement

babel will help the older browser to understand the ES6+

attributes in jsx are must be in camel case 

___________________________
React Component :

Everything in a react is a Component in react

 -Class based component (older no one uses that)

 -Function component (new and easy to write)

React Functional Component:
 It need captical as starting letter 
 it is a Function that return some jsx 
 it is js component return a react element 

  const heading = ()=>
 {
    return
    <h1>1st Compoenent</h1>
 }

in above no need return if only one statement inside it 

 const heading = ()=>
 (
     <h1 className="header">1st Compoenent</h1>
 )
 const footer =()=>
 {
    return 
    <h1 className="header">hello la </h1>
 }

 jsx is nested we can give more element in functional Compoenent

 root.render only converts the jsx to HTML code 

Compoenent Composition 

 -It means render the functional component inside a functional component 

in functional component if we use the {} inside it we can perform the js function even the console.log() also works

how to put react element inside a functional we can render  inside {}

 -we can use the functional compoenet inside the react component 

 -inside the {} can do any js functionality 

react take care of malious attck 

at the end of the day jsx make s our code readable
